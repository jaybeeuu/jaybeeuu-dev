version: 2.1

docker-image-node: &docker-image-node
    docker:
      - image: circleci/node:12.13.1

src-dir: &src-dir ~/src

base: &base
    <<: *docker-image-node
    working_directory: *src-dir

jobs:
    checkout-install-deps:
        <<: *base

        steps:
          - checkout:
              path: *src-dir

          - run: ./.devcontainer/scripts/post-create-command.sh

          - restore_cache:
                keys:
                  - v1-npm-deps-api-{{ checksum "./api/package-lock.json" }}
                  - v1-npm-deps-api
          - run: npm install --prefix ./api
          - save_cache:
                paths:
                  - node_modules
                key: v1-npm-deps-api-{{ checksum "./api/package-lock.json" }}

          - restore_cache:
                keys:
                  - v1-npm-deps-client-{{ checksum "./client/package-lock.json" }}
                  - v1-npm-deps-client
          - run: npm install --prefix ./client
          - save_cache:
                paths:
                  - node_modules
                key: v1-npm-deps-client-{{ checksum "./client/package-lock.json" }}

          - persist_to_workspace:
                root: *src-dir
                paths:
                  - ./*



    lint:
        <<: *base

        steps:
          - attach_workspace:
                at: *src-dir
          - run: npm run-script lint


    type-check:
        <<: *base

        steps:
          - attach_workspace:
                at: *src-dir
          - run: npm run-script type-check


    test:
        <<: *base

        steps:
          - attach_workspace:
                at: *src-dir
          - run: npm run-script test


    build:
        <<: *base

        steps:
          - attach_workspace:
                at: *src-dir
          - run: npm run-script build
          - store_artifacts:
              path: ./dist
              destination: api-dist



workflows:
  version: 2

  install-test-build:
    jobs:
      - checkout-install-deps

      - type-check:
            requires:
              - checkout-install-deps
      - test:
            requires:
              - checkout-install-deps
      - lint:
            requires:
              - checkout-install-deps
      - build:
            requires:
              - checkout-install-deps
