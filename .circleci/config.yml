version: 2.1

orbs:
  codecov: codecov/codecov@3.2.5

src-dir: &src-dir ~/src

job-base: &job-base
  resource_class: large
  docker:
    - image: cimg/node:22.14.0
      auth:
        username: $DOCKERHUB_USERNAME
        password: $DOCKERHUB_PASSWORD
  working_directory: *src-dir

commands:
  install_pnpm:
    steps:
      - run:
          name: Install pnpm
          command: sudo npm i -g pnpm@10.4.1

  setup_workspace:
    steps:
      - attach_workspace:
          at: *src-dir
      - install_pnpm

  setup_git:
    parameters:
      user_email:
        type: string
      user_name:
        type: string
      gpg_key_id:
        type: string
      gpg_key:
        type: string
    steps:
      - add_ssh_keys:
          fingerprints:
            - 70:fc:ed:9a:8a:65:2a:2a:e2:0a:33:c4:a9:4b:e1:63
      - run:
          name: Import GPG Key
          command: echo -e $GITHUB_GPG_KEY | gpg --import
      - run:
          name: Set Git user config
          command: |
            git config --global user.email "<<parameters.user_email>>"
            git config --global user.name "<<parameters.user_name>>"
            git config --global user.signingkey "<<parameters.gpg_key_id>>"
            git config --global commit.gpgsign true
      - run:
          name: Get to know GitHub's ssh host fingerprint
          command: ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts

jobs:
  checkout-install-build:
    <<: *job-base

    environment:
      CYPRESS_INSTALL_BINARY: 0

    steps:
      - checkout:
          path: *src-dir
      - install_pnpm
      - run:
          name: Install Dependencies
          command: pnpm -r install
      - run:
          name: Build Packages
          command: pnpm build
      - run:
          name: Generate Certificates
          command: pnpm gen-certs
      - store_artifacts:
          path: ./packages/site/dist
          destination: site-dist
      - persist_to_workspace:
          root: *src-dir
          paths:
            - ./*

  lint:
    <<: *job-base

    steps:
      - setup_workspace
      - run:
          name: Lint
          command: pnpm lint

  format-check:
    <<: *job-base

    steps:
      - setup_workspace
      - run:
          name: Format Check
          command: pnpm format-check

  spell-check:
    <<: *job-base

    steps:
      - setup_workspace
      - run:
          name: Spell Check
          command: pnpm spell-check

  type-check:
    <<: *job-base

    steps:
      - setup_workspace
      - run:
          name: Type Check
          command: pnpm type-check

  test:
    <<: *job-base

    steps:
      - setup_workspace
      - run:
          name: Unit Tests
          command: pnpm test --ci
      - store_test_results:
          path: ./test-reports/
      - codecov/upload

  e2e-coverage:
    <<: *job-base
    environment:
      CYPRESS_COVERAGE: true
      CYPRESS_VIDEO: false
      DBUS_SESSION_BUS_ADDRESS: /dev/null
    docker:
      - image: cypress/included:15.0.0
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD

    working_directory: *src-dir

    steps:
      - attach_workspace:
          at: *src-dir
      - run:
          name: Install pnpm
          command: npm i -g pnpm@10.4.1
      - run:
          name: Install dependencies
          command: pnpm --filter @jaybeeuu/site... --filter @jaybeeuu/e2e... i
      - run:
          name: Build
          command: pnpm --filter @jaybeeuu/site... --filter @jaybeeuu/e2e... build
      - run:
          name: Run e2e Tests
          environment:
            DBUS_SESSION_BUS_ADDRESS: /dev/null
          command: pnpm --filter @jaybeeuu/site start & pnpx wait-on --timeout=60000 https://localhost:3443/ && pnpm e2e run
      - run:
          name: Install curl and gpg
          command: apt-get update && apt-get install curl gpg -y
      - codecov/upload

  e2e-deployed:
    <<: *job-base
    environment:
      DBUS_SESSION_BUS_ADDRESS: /dev/null
    docker:
      - image: cypress/included:15.0.0
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD

    working_directory: *src-dir

    steps:
      - attach_workspace:
          at: *src-dir
      - run:
          name: Install pnpm
          command: npm i -g pnpm@10.4.1
      - run:
          name: Derive Deployment URL
          command: |
            if [ $CIRCLE_BRANCH = "main" ];
            then
              echo 'export DEPLOYMENT_URL="https://jaybeeuu.dev"' >> "$BASH_ENV"
            else
              echo 'export DEPLOYMENT_URL="https://$CIRCLE_BRANCH.jaybeeuu-dev.pages.dev"' >> "$BASH_ENV"
            fi
      - run:
          name: Run e2e Tests
          environment:
            DBUS_SESSION_BUS_ADDRESS: /dev/null
          command: node ./packages/scripts/bin/wait-up.js --url "$DEPLOYMENT_URL/version.json" --commit-hash $CIRCLE_SHA1 && pnpm e2e run --config "baseUrl=$DEPLOYMENT_URL"
      - store_test_results:
          path: ./packages/e2e/.reports
      - store_artifacts:
          path: ./packages/e2e/.screenshots
          destination: e2e-screenshots
      - store_artifacts:
          path: ./packages/e2e/.videos
          destination: e2e-videos
      - store_artifacts:
          path: ./packages/e2e/fixtures/blog
          destination: e2e-posts

  version:
    <<: *job-base
    steps:
      - setup_workspace
      - setup_git:
          user_email: $GITHUB_USER_EMAIL
          user_name: $GITHUB_USER_NAME
          gpg_key: $GITHUB_GPG_KEY
          gpg_key_id: $GITHUB_GPG_KEY_ID
      - run:
          name: Version Packages
          command: node ./packages/scripts/bin/sdlc.js version --gitHubToken $GITHUB_TOKEN

  publish:
    <<: *job-base
    steps:
      - setup_workspace
      - setup_git:
          user_email: $GITHUB_USER_EMAIL
          user_name: $GITHUB_USER_NAME
          gpg_key: $GITHUB_GPG_KEY
          gpg_key_id: $GITHUB_GPG_KEY_ID
      - run:
          name: Login to npm
          command: echo //registry.npmjs.org/:_authToken=$NPM_TOKEN >> ~/.npmrc
      - run:
          name: Publish Packages
          command: node ./packages/scripts/bin/sdlc.js publish --npmToken $NPM_TOKEN

workflows:
  build:
    jobs:
      - checkout-install-build
      - e2e-coverage:
          requires:
            - checkout-install-build
      - e2e-deployed:
          requires:
            - checkout-install-build
      - format-check:
          requires:
            - checkout-install-build
      - lint:
          requires:
            - checkout-install-build
      - spell-check:
          requires:
            - checkout-install-build
      - test:
          requires:
            - checkout-install-build
      - type-check:
          requires:
            - checkout-install-build
      - version:
          filters:
            branches:
              only: main
            tags:
              ignore: /.*/
          requires:
            - e2e-coverage
            - e2e-deployed
            - format-check
            - lint
            - spell-check
            - test
            - type-check
      - publish:
          filters:
            branches:
              only: main
            tags:
              ignore: /.*/
          requires:
            - e2e-coverage
            - e2e-deployed
            - format-check
            - lint
            - spell-check
            - test
            - type-check
