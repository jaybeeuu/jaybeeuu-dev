version: 2.1


src-dir: &src-dir ~/src

job-base: &job-base
  resource_class: large
  docker:
    - image: cimg/node:18.11.0
      auth:
        username: $DOCKERHUB_USERNAME
        password: $DOCKERHUB_PASSWORD
  working_directory: *src-dir

commands:
  install_pnpm:
    steps:
      - run:
          name: Install pnpm
          command: npm i -g pnpm@7.0.0

  setup_workspace:
    steps:
      - attach_workspace:
          at: *src-dir
      - install_pnpm

  setup_git:
    parameters:
      user_email:
        type: string
      user_name:
        type: string
      gpg_key_id:
        type: string
      gpg_key:
        type: string
    steps:
      - add_ssh_keys:
          fingerprints:
            - 70:fc:ed:9a:8a:65:2a:2a:e2:0a:33:c4:a9:4b:e1:63
      - run:
          name: Import GPG Key
          command: echo -e $GITHUB_GPG_KEY | gpg --import
      - run:
          name: Set Git user config
          command: |
            git config --global user.email "<<parameters.user_email>>"
            git config --global user.name "<<parameters.user_name>>"
            git config --global user.signingkey "<<parameters.gpg_key_id>>"
            git config --global commit.gpgsign true
      - run:
          name: Get to know GitHub's ssh host fingerprint
          command: ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts

jobs:
  checkout-install-build:
    <<: *job-base

    environment:
      CYPRESS_INSTALL_BINARY: 0

    steps:
      - checkout:
          path: *src-dir
      - install_pnpm
      - run:
          name: Install Dependencies
          command: pnpm -r install
      - run:
          name: Build Packages
          command: pnpm build
      - run:
          name: Generate Certificates
          command: pnpm gen-certs
      - store_artifacts:
          path: ./packages/site/dist
          destination: site-dist
      - persist_to_workspace:
          root: *src-dir
          paths:
            - ./*

  lint:
    <<: *job-base

    steps:
      - setup_workspace
      - run:
          name: Lint
          command: pnpm lint

  spellcheck:
    <<: *job-base

    steps:
      - setup_workspace
      - run:
          name: Spell Check
          command: pnpm spellcheck

  type-check:
    <<: *job-base

    steps:
      - setup_workspace
      - run:
          name: Type Check
          command: pnpm type-check

  test:
    <<: *job-base

    steps:
      - setup_workspace
      - run:
          name: Unit Tests
          command: pnpm type-check

  e2e:
    <<: *job-base
    docker:
      - image: cypress/included:10.4.0
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD

    working_directory: *src-dir

    steps:
      - setup_workspace
      - run:
          name: Run e2e Tests
          command: pnpm e2e-ci
      - store_artifacts:
          path: ./packages/e2e/.screenshots
          destination: e2e-screenshots
      - store_artifacts:
          path: ./packages/e2e/.videos
          destination: e2e-videos

  version:
    <<: *job-base
    steps:
      - setup_workspace
      - setup_git:
          user_email: $GITHUB_USER_EMAIL
          user_name: $GITHUB_USER_NAME
          gpg_key: $GITHUB_GPG_KEY
          gpg_key_id: $GITHUB_GPG_KEY_ID
      - run:
          name: Version Packages
          command: node ./packages/scripts/bin/sdlc.js version --gitHubToken $GITHUB_TOKEN

  publish:
    <<: *job-base
    steps:
      - setup_workspace
      - setup_git:
          user_email: $GITHUB_USER_EMAIL
          user_name: $GITHUB_USER_NAME
          gpg_key: $GITHUB_GPG_KEY
          gpg_key_id: $GITHUB_GPG_KEY_ID
      - run:
          name: Login to npm
          command: echo //registry.npmjs.org/:_authToken=$NPM_TOKEN >> ~/.npmrc
      - run:
          name: Publish Packages
          command: node ./packages/scripts/bin/sdlc.js publish --npmToken $NPM_TOKEN

workflows:
  build:
    jobs:
      - checkout-install-build
      - lint:
          requires:
            - checkout-install-build
      - spellcheck:
          requires:
            - checkout-install-build
      - type-check:
          requires:
            - checkout-install-build
      - test:
          requires:
            - checkout-install-build
      - e2e:
          requires:
            - checkout-install-build
      - version:
          filters:
            branches:
              only: main
            tags:
              ignore: /.*/
          requires:
            - lint
            - spellcheck
            - type-check
            - test
            - e2e
      - publish:
          filters:
            branches:
              only: main
            tags:
              ignore: /.*/
          requires:
            - lint
            - spellcheck
            - type-check
            - test
            - e2e
